{
  "swagger": "2.0",
  "info": {
    "title": "XTVision database",
    "description": "All XTVsion database apis",
    "version": "1.0.0"
  },
  "host": "localhost:5001",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {},
  "paths": {
    "/database/users/": {
      "get": {
        "tags": [
          "USERS"
        ],
        "summary": "get all users",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "description": "user name."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned users",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "xtvision"
                  },
                  "description": {
                    "type": "string",
                    "example": "Default user"
                  },
                  "language": {
                    "type": "string",
                    "example": "fr"
                  },
                  "time_zone": {
                    "type": "string",
                    "example": "UTC+1"
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2022-08-05T10:04:24.651Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "example": "2022-08-05T10:04:24.651Z"
                  },
                  "Roles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Exploitation"
                        }
                      },
                      "required": [
                        "name"
                      ]
                    }
                  },
                  "ManagementAreas": {
                    "type": "array",
                    "example": [],
                    "items": {}
                  }
                },
                "required": [
                  "id",
                  "name",
                  "description",
                  "language",
                  "time_zone",
                  "createdAt",
                  "updatedAt",
                  "Roles",
                  "ManagementAreas"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "USERS"
        ],
        "summary": "create a user",
        "description": "",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "user to add",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                },
                "language": {
                  "type": "string",
                  "example": "string"
                },
                "time_zone": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned user",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "xtvision"
                },
                "description": {
                  "type": "string",
                  "example": "Default user"
                },
                "language": {
                  "type": "string",
                  "example": "fr"
                },
                "time_zone": {
                  "type": "string",
                  "example": "UTC+1"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2022-08-05T10:04:24.651Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2022-08-05T10:04:24.651Z"
                },
                "Roles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Exploitation"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                },
                "ManagementAreas": {
                  "type": "array",
                  "example": [],
                  "items": {}
                }
              },
              "required": [
                "id",
                "name",
                "description",
                "language",
                "time_zone",
                "createdAt",
                "updatedAt",
                "Roles",
                "ManagementAreas"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/users/{id}": {
      "put": {
        "tags": [
          "USERS"
        ],
        "summary": "update a user",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "user ID."
          },
          {
            "name": "user",
            "in": "body",
            "description": "user to update",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                },
                "language": {
                  "type": "string",
                  "example": "string"
                },
                "time_zone": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "USERS"
        ],
        "summary": "get a user by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "user ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned user",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "xtvision"
                },
                "description": {
                  "type": "string",
                  "example": "Default user"
                },
                "language": {
                  "type": "string",
                  "example": "fr"
                },
                "time_zone": {
                  "type": "string",
                  "example": "UTC+1"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2022-08-05T10:04:24.651Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2022-08-05T10:04:24.651Z"
                },
                "Roles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Exploitation"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                },
                "ManagementAreas": {
                  "type": "array",
                  "example": [],
                  "items": {}
                }
              },
              "required": [
                "id",
                "name",
                "description",
                "language",
                "time_zone",
                "createdAt",
                "updatedAt",
                "Roles",
                "ManagementAreas"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "USERS"
        ],
        "summary": "delete a user",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "user ID."
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/users/filter": {
      "post": {
        "tags": [
          "USERS"
        ],
        "summary": "get list of users from filters",
        "description": "",
        "parameters": [
          {
            "name": "filters",
            "in": "body",
            "description": "filters",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "roles": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned users",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "xtvision"
                  },
                  "description": {
                    "type": "string",
                    "example": "Default user"
                  },
                  "language": {
                    "type": "string",
                    "example": "fr"
                  },
                  "time_zone": {
                    "type": "string",
                    "example": "UTC+1"
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2022-08-05T10:04:24.651Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "example": "2022-08-05T10:04:24.651Z"
                  },
                  "Roles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Exploitation"
                        }
                      },
                      "required": [
                        "name"
                      ]
                    }
                  },
                  "ManagementAreas": {
                    "type": "array",
                    "example": [],
                    "items": {}
                  }
                },
                "required": [
                  "id",
                  "name",
                  "description",
                  "language",
                  "time_zone",
                  "createdAt",
                  "updatedAt",
                  "Roles",
                  "ManagementAreas"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/users/linkRoles": {
      "post": {
        "tags": [
          "USERS"
        ],
        "summary": "link a user with n roles",
        "description": "",
        "parameters": [
          {
            "name": "NewRoleUser",
            "in": "body",
            "description": "role id and user id",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "RoleId": {
                    "type": "number",
                    "example": 1
                  },
                  "UserId": {
                    "type": "number",
                    "example": 1
                  }
                },
                "required": [
                  "RoleId",
                  "UserId"
                ]
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/users/linkDashboards": {
      "post": {
        "tags": [
          "USERS"
        ],
        "summary": "link a user with n dashboards",
        "description": "",
        "parameters": [
          {
            "name": "NewDashboardUser",
            "in": "body",
            "description": "dashboard id and user id",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "DashboardId": {
                    "type": "number",
                    "example": 1
                  },
                  "UserId": {
                    "type": "number",
                    "example": 1
                  }
                },
                "required": [
                  "DashboardId",
                  "UserId"
                ]
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/users/linkManagementAreas": {
      "post": {
        "tags": [
          "USERS"
        ],
        "summary": "link a user with n managementAreas",
        "description": "",
        "parameters": [
          {
            "name": "NewManagementAreaUser",
            "in": "body",
            "description": "managementArea id and user id",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ManagementAreaId": {
                    "type": "number",
                    "example": 1
                  },
                  "UserId": {
                    "type": "number",
                    "example": 1
                  }
                },
                "required": [
                  "ManagementAreaId",
                  "UserId"
                ]
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/users/linkCategories": {
      "post": {
        "tags": [
          "USERS"
        ],
        "summary": "link a user with n categories",
        "description": "",
        "parameters": [
          {
            "name": "NewCategoryUser",
            "in": "body",
            "description": "category id and user id",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "CategoryId": {
                    "type": "number",
                    "example": 1
                  },
                  "UserId": {
                    "type": "number",
                    "example": 1
                  }
                },
                "required": [
                  "CategoryId",
                  "UserId"
                ]
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/dashboards/": {
      "get": {
        "tags": [
          "DASHBOARDS"
        ],
        "summary": "get all dashboards ",
        "description": "",
        "responses": {
          "200": {
            "description": "Returned dashboards",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "string"
                  },
                  "layout": {
                    "type": "string",
                    "example": "JSON"
                  },
                  "widgets": {
                    "type": "string",
                    "example": "JSON"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "layout",
                  "widgets"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DASHBOARDS"
        ],
        "summary": "create one dashboard",
        "description": "",
        "parameters": [
          {
            "name": "dashboard",
            "in": "body",
            "description": "dashboard to add",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                },
                "layout": {
                  "type": "string",
                  "example": "string"
                },
                "widgets": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "name",
                "description",
                "layout",
                "widgets"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned dashboards",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                },
                "layout": {
                  "type": "string",
                  "example": "JSON"
                },
                "widgets": {
                  "type": "string",
                  "example": "JSON"
                }
              },
              "required": [
                "id",
                "name",
                "layout",
                "widgets"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DASHBOARDS"
        ],
        "summary": "delete all dashboards ",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/dashboards/{id}": {
      "get": {
        "tags": [
          "DASHBOARDS"
        ],
        "summary": "get one dashboard by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "dashboard ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned dashboards",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                },
                "layout": {
                  "type": "string",
                  "example": "JSON"
                },
                "widgets": {
                  "type": "string",
                  "example": "JSON"
                }
              },
              "required": [
                "id",
                "name",
                "layout",
                "widgets"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DASHBOARDS"
        ],
        "summary": "update a dashboard",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "dashboard ID."
          },
          {
            "name": "dashboard",
            "in": "body",
            "description": "dashboard to update",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                },
                "layout": {
                  "type": "string",
                  "example": "string"
                },
                "widgets": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "name",
                "description",
                "layout",
                "widgets"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "DASHBOARDS"
        ],
        "summary": "delete one dashboard by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "dashboard ID."
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/dashboardsUsers/": {
      "get": {
        "tags": [
          "DASHBOARDS USERS"
        ],
        "summary": "get all dashboards and users linked",
        "description": "",
        "parameters": [
          {
            "name": "dashboardId",
            "in": "query",
            "type": "integer",
            "description": "dashboard ID."
          },
          {
            "name": "userId",
            "in": "query",
            "type": "integer",
            "description": "user ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned dashboards ids and users ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "DashboardId": {
                    "type": "number",
                    "example": 1
                  },
                  "UserId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "DashboardId",
                  "UserId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DASHBOARDS USERS"
        ],
        "summary": "create a list of users ids and dashboards ids linked",
        "description": "",
        "parameters": [
          {
            "name": "dashboardsUsers",
            "in": "body",
            "description": "dashboards ids and users ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "DashboardId": {
                    "type": "number",
                    "example": 1
                  },
                  "UserId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "DashboardId",
                  "UserId"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned dashboards ids and users ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "DashboardId": {
                    "type": "number",
                    "example": 1
                  },
                  "UserId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "DashboardId",
                  "UserId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/dashboardsUsers/usersIds": {
      "post": {
        "tags": [
          "DASHBOARDS USERS"
        ],
        "summary": "get all users ids from dashboards ids",
        "description": "",
        "parameters": [
          {
            "name": "dashboardsIds",
            "in": "body",
            "description": "dashboards ids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned dashboards ids and users ids linked",
            "schema": {
              "type": "array",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "number"
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/features/": {
      "get": {
        "tags": [
          "FEATURES"
        ],
        "summary": "get all features",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "description": "feature name."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned features",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "string"
                  },
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "icon": {
                    "type": "string",
                    "example": "string"
                  },
                  "parentFeatureId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "id",
                  "name",
                  "type",
                  "icon",
                  "parentFeatureId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/features/{id}": {
      "get": {
        "tags": [
          "FEATURES"
        ],
        "summary": "get one feature by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "feature id."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned feature",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                },
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "icon": {
                  "type": "string",
                  "example": "string"
                },
                "parentFeatureId": {
                  "type": "number",
                  "example": 2
                }
              },
              "required": [
                "id",
                "name",
                "type",
                "icon",
                "parentFeatureId"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/features/linkRoles": {
      "post": {
        "tags": [
          "FEATURES"
        ],
        "summary": "link a feature with n roles",
        "description": "",
        "parameters": [
          {
            "name": "NewRoleRole",
            "in": "body",
            "description": "feature id and role id",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "RoleId": {
                    "type": "number",
                    "example": 1
                  },
                  "FeatureId": {
                    "type": "number",
                    "example": 1
                  }
                },
                "required": [
                  "RoleId",
                  "FeatureId"
                ]
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/managementAreas/": {
      "get": {
        "tags": [
          "MANAGEMENT AREAS"
        ],
        "summary": "get all management areas",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "description": "management area name."
          },
          {
            "name": "username",
            "in": "query",
            "type": "string",
            "description": "user name."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned management areas",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MANAGEMENT AREAS"
        ],
        "summary": "create management area",
        "description": "",
        "parameters": [
          {
            "name": "managementArea",
            "in": "body",
            "description": "managementArea to add",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned management area",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "id",
                "name"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MANAGEMENT AREAS"
        ],
        "summary": "delete all management areas",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/managementAreas/{id}": {
      "get": {
        "tags": [
          "MANAGEMENT AREAS"
        ],
        "summary": "get one management area by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "management area ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned management area",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "id",
                "name"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MANAGEMENT AREAS"
        ],
        "summary": "delete one management area by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "management area ID."
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/managementAreas/linkUsers": {
      "post": {
        "tags": [
          "MANAGEMENT AREAS"
        ],
        "summary": "link a managementArea with n users",
        "description": "",
        "parameters": [
          {
            "name": "NewManagementAreaUser",
            "in": "body",
            "description": "managementarea id and user id",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ManagementAreaId": {
                    "type": "number",
                    "example": 1
                  },
                  "UserId": {
                    "type": "number",
                    "example": 1
                  }
                },
                "required": [
                  "ManagementAreaId",
                  "UserId"
                ]
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/managementAreasUsers/": {
      "get": {
        "tags": [
          "MANAGEMENT AREAS USERS"
        ],
        "summary": "get all managementareas and users linked",
        "description": "",
        "parameters": [
          {
            "name": "managementareaId",
            "in": "query",
            "type": "integer",
            "description": "managementarea ID."
          },
          {
            "name": "userId",
            "in": "query",
            "type": "integer",
            "description": "user ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned managementareas ids and users ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "UserId": {
                    "type": "number",
                    "example": 1
                  },
                  "ManagementAreaId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "UserId",
                  "ManagementAreaId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MANAGEMENT AREAS USERS"
        ],
        "summary": "create a list of users ids and managementareas ids linked",
        "description": "",
        "parameters": [
          {
            "name": "managementareasUsers",
            "in": "body",
            "description": "managementareas ids and users ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ManagementAreaId": {
                    "type": "number",
                    "example": 1
                  },
                  "UserId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "ManagementAreaId",
                  "UserId"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned managementareas ids and users ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ManagementAreaId": {
                    "type": "number",
                    "example": 1
                  },
                  "UserId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "ManagementAreaId",
                  "UserId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/managementAreasUsers/usersIds": {
      "post": {
        "tags": [
          "MANAGEMENT AREAS USERS"
        ],
        "summary": "get all users ids from managementareas ids",
        "description": "",
        "parameters": [
          {
            "name": "managementareasIds",
            "in": "body",
            "description": "managementareas ids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned managementareas ids and users ids linked",
            "schema": {
              "type": "array",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "number"
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/roles/": {
      "get": {
        "tags": [
          "ROLES"
        ],
        "summary": "get all roles",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "description": "role name."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned roles",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "string"
                  },
                  "Features": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "string"
                        }
                      },
                      "required": [
                        "name"
                      ]
                    }
                  }
                },
                "required": [
                  "id",
                  "name",
                  "Features"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ROLES"
        ],
        "summary": "add a role",
        "description": "",
        "parameters": [
          {
            "name": "role",
            "in": "body",
            "description": "role to add",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                },
                "userIds": {
                  "type": "array",
                  "example": [
                    1
                  ],
                  "items": {
                    "type": "number"
                  }
                },
                "featureIds": {
                  "type": "array",
                  "example": [
                    1
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              },
              "required": [
                "name",
                "description"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned role",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "id",
                "name"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ROLES"
        ],
        "summary": "delete all roles",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/roles/withUsers": {
      "get": {
        "tags": [
          "ROLES"
        ],
        "summary": "get roles with related users",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "description": "role name."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned roles",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "string"
                  },
                  "Users": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    }
                  }
                },
                "required": [
                  "id",
                  "name",
                  "Users"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/roles/{id}": {
      "get": {
        "tags": [
          "ROLES"
        ],
        "summary": "get one role by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "role ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned role",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "id",
                "name"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ROLES"
        ],
        "summary": "delete one role by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "role ID."
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "ROLES"
        ],
        "summary": "update one role by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "role ID."
          },
          {
            "name": "role",
            "in": "body",
            "description": "role to update",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/roles/linkUsers": {
      "post": {
        "tags": [
          "ROLES"
        ],
        "summary": "link a role with n users",
        "description": "",
        "parameters": [
          {
            "name": "NewRoleUser",
            "in": "body",
            "description": "role id and user id",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "RoleId": {
                    "type": "number",
                    "example": 1
                  },
                  "UserId": {
                    "type": "number",
                    "example": 1
                  }
                },
                "required": [
                  "RoleId",
                  "UserId"
                ]
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/roles/linkFeatures": {
      "post": {
        "tags": [
          "ROLES"
        ],
        "summary": "link a role with n features",
        "description": "",
        "parameters": [
          {
            "name": "NewRoleFeature",
            "in": "body",
            "description": "role id and feature id",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "RoleId": {
                    "type": "number",
                    "example": 1
                  },
                  "FeatureId": {
                    "type": "number",
                    "example": 1
                  }
                },
                "required": [
                  "RoleId",
                  "FeatureId"
                ]
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/rolesUsers/": {
      "get": {
        "tags": [
          "ROLES USERS"
        ],
        "summary": "get all roles and users linked",
        "description": "",
        "parameters": [
          {
            "name": "roleId",
            "in": "query",
            "type": "integer",
            "description": "role ID."
          },
          {
            "name": "userId",
            "in": "query",
            "type": "integer",
            "description": "user ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned roles ids and users ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "UserId": {
                    "type": "number",
                    "example": 1
                  },
                  "RoleId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "UserId",
                  "RoleId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ROLES USERS"
        ],
        "summary": "create a list of users ids and roles ids linked",
        "description": "",
        "parameters": [
          {
            "name": "NewRoleUser",
            "in": "body",
            "description": "role id and user id",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "RoleId": {
                    "type": "number",
                    "example": 1
                  },
                  "UserId": {
                    "type": "number",
                    "example": 1
                  }
                },
                "required": [
                  "RoleId",
                  "UserId"
                ]
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/rolesUsers/usersIds": {
      "post": {
        "tags": [
          "ROLES USERS"
        ],
        "summary": "get all users ids from roles ids",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "roles ids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned users ids and roles ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "RoleId": {
                    "type": "number",
                    "example": 1
                  },
                  "UserId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "RoleId",
                  "UserId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/rolesFeatures/": {
      "get": {
        "tags": [
          "ROLES FEATURES"
        ],
        "summary": "get all roles and features linked",
        "description": "",
        "parameters": [
          {
            "name": "roleId",
            "in": "query",
            "type": "integer",
            "description": "role ID."
          },
          {
            "name": "featureId",
            "in": "query",
            "type": "integer",
            "description": "feature ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned roles ids and features ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "FeatureId": {
                    "type": "number",
                    "example": 1
                  },
                  "RoleId": {
                    "type": "number",
                    "example": 2
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ROLES FEATURES"
        ],
        "summary": "create a list of features ids and roles ids linked",
        "description": "",
        "parameters": [
          {
            "name": "NewRoleFeature",
            "in": "body",
            "description": "role id and feature id",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "RoleId": {
                    "type": "number",
                    "example": 1
                  },
                  "FeatureId": {
                    "type": "number",
                    "example": 1
                  }
                },
                "required": [
                  "RoleId",
                  "FeatureId"
                ]
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/rolesFeatures/featuresIds": {
      "post": {
        "tags": [
          "ROLES FEATURES"
        ],
        "summary": "get all features ids from roles ids",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "roles ids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned features ids from roles ids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "number"
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/systems/": {
      "get": {
        "tags": [
          "SYSTEMS"
        ],
        "summary": "get all systems",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "system name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned systems",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "server"
                  },
                  "kind": {
                    "type": "string",
                    "example": "type"
                  },
                  "brand": {
                    "type": "string",
                    "example": "brand"
                  },
                  "port": {
                    "type": "string",
                    "example": "port"
                  },
                  "address": {
                    "type": "string",
                    "example": "address"
                  },
                  "url_connexion_api": {
                    "type": "string",
                    "example": "url_connexion_api"
                  },
                  "url_connexion_ws": {
                    "type": "string",
                    "example": "url_connexion_ws"
                  },
                  "release": {
                    "type": "string",
                    "example": "release"
                  },
                  "state": {
                    "type": "string",
                    "example": "connected"
                  },
                  "createdBy": {
                    "type": "string",
                    "example": "xtvision"
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "01/01/2000"
                  },
                  "updatedBy": {
                    "type": "string",
                    "example": "xtvision"
                  },
                  "updatedAt": {
                    "type": "string",
                    "example": "01/01/2000"
                  },
                  "user": {
                    "type": "string",
                    "example": "string"
                  },
                  "authMode": {
                    "type": "string",
                    "example": "string"
                  },
                  "password": {
                    "type": "string",
                    "example": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "kind",
                  "brand",
                  "address",
                  "url_connexion_api",
                  "url_connexion_ws",
                  "release",
                  "state",
                  "createdBy",
                  "createdAt",
                  "updatedBy",
                  "updatedAt",
                  "user",
                  "authMode",
                  "password"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SYSTEMS"
        ],
        "summary": "create a system",
        "description": "",
        "parameters": [
          {
            "name": "server",
            "in": "body",
            "description": "new system object ",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "server"
                },
                "kind": {
                  "type": "string",
                  "example": "type"
                },
                "brand": {
                  "type": "string",
                  "example": "brand"
                },
                "port": {
                  "type": "string",
                  "example": "port"
                },
                "address": {
                  "type": "string",
                  "example": "address"
                },
                "url_connexion_api": {
                  "type": "string",
                  "example": "url_connexion_api"
                },
                "url_connexion_ws": {
                  "type": "string",
                  "example": "url_connexion_ws"
                },
                "release": {
                  "type": "string",
                  "example": "release"
                },
                "state": {
                  "type": "string",
                  "example": "connected"
                },
                "createdBy": {
                  "type": "string",
                  "example": "xtvision"
                },
                "updatedBy": {
                  "type": "string",
                  "example": "xtvision"
                },
                "authMode": {
                  "type": "string",
                  "example": "string"
                },
                "user": {
                  "type": "string",
                  "example": "string"
                },
                "password": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "name",
                "kind",
                "brand",
                "address",
                "url_connexion_api",
                "url_connexion_ws",
                "release",
                "state",
                "createdBy",
                "updatedBy",
                "authMode",
                "user",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned system",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "server"
                },
                "kind": {
                  "type": "string",
                  "example": "type"
                },
                "brand": {
                  "type": "string",
                  "example": "brand"
                },
                "port": {
                  "type": "string",
                  "example": "port"
                },
                "address": {
                  "type": "string",
                  "example": "address"
                },
                "url_connexion_api": {
                  "type": "string",
                  "example": "url_connexion_api"
                },
                "url_connexion_ws": {
                  "type": "string",
                  "example": "url_connexion_ws"
                },
                "release": {
                  "type": "string",
                  "example": "release"
                },
                "state": {
                  "type": "string",
                  "example": "connected"
                },
                "createdBy": {
                  "type": "string",
                  "example": "xtvision"
                },
                "createdAt": {
                  "type": "string",
                  "example": "01/01/2000"
                },
                "updatedBy": {
                  "type": "string",
                  "example": "xtvision"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "01/01/2000"
                },
                "authMode": {
                  "type": "string",
                  "example": "string"
                },
                "user": {
                  "type": "string",
                  "example": "string"
                },
                "password": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "id",
                "name",
                "kind",
                "brand",
                "address",
                "url_connexion_api",
                "url_connexion_ws",
                "release",
                "state",
                "createdBy",
                "createdAt",
                "updatedBy",
                "updatedAt",
                "authMode",
                "user",
                "password"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SYSTEMS"
        ],
        "summary": "delete all systems",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/systems/{id}": {
      "get": {
        "tags": [
          "SYSTEMS"
        ],
        "summary": "get one system by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "system id"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned system",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "server"
                },
                "kind": {
                  "type": "string",
                  "example": "type"
                },
                "brand": {
                  "type": "string",
                  "example": "brand"
                },
                "port": {
                  "type": "string",
                  "example": "port"
                },
                "address": {
                  "type": "string",
                  "example": "address"
                },
                "url_connexion_api": {
                  "type": "string",
                  "example": "url_connexion_api"
                },
                "url_connexion_ws": {
                  "type": "string",
                  "example": "url_connexion_ws"
                },
                "release": {
                  "type": "string",
                  "example": "release"
                },
                "state": {
                  "type": "string",
                  "example": "connected"
                },
                "createdBy": {
                  "type": "string",
                  "example": "xtvision"
                },
                "createdAt": {
                  "type": "string",
                  "example": "01/01/2000"
                },
                "updatedBy": {
                  "type": "string",
                  "example": "xtvision"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "01/01/2000"
                },
                "user": {
                  "type": "string",
                  "example": "string"
                },
                "authMode": {
                  "type": "string",
                  "example": "string"
                },
                "password": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "id",
                "name",
                "kind",
                "brand",
                "address",
                "url_connexion_api",
                "url_connexion_ws",
                "release",
                "state",
                "createdBy",
                "createdAt",
                "updatedBy",
                "updatedAt",
                "user",
                "authMode",
                "password"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SYSTEMS"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "system id"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "system parameters",
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "example": "ip or dns"
                },
                "kind": {
                  "type": "string",
                  "example": "kind"
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "port": {
                  "type": "string",
                  "example": "port"
                },
                "managementArea": {
                  "type": "string",
                  "example": "managementArea"
                },
                "category": {
                  "type": "string",
                  "example": "category"
                },
                "brand": {
                  "type": "string",
                  "example": "brand"
                },
                "createdBy": {
                  "type": "string",
                  "example": "xtvision"
                },
                "authMode": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "SYSTEMS"
        ],
        "summary": "delete one system by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "system id"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/systems/filter": {
      "post": {
        "tags": [
          "SYSTEMS"
        ],
        "summary": "get list of systems from filters",
        "description": "",
        "parameters": [
          {
            "name": "filters",
            "in": "body",
            "description": "filters",
            "schema": {
              "type": "object",
              "properties": {
                "brand": {
                  "type": "string",
                  "example": "string"
                },
                "kind": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned systems filtered",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "server"
                  },
                  "kind": {
                    "type": "string",
                    "example": "type"
                  },
                  "brand": {
                    "type": "string",
                    "example": "brand"
                  },
                  "port": {
                    "type": "string",
                    "example": "port"
                  },
                  "address": {
                    "type": "string",
                    "example": "address"
                  },
                  "url_connexion_api": {
                    "type": "string",
                    "example": "url_connexion_api"
                  },
                  "url_connexion_ws": {
                    "type": "string",
                    "example": "url_connexion_ws"
                  },
                  "release": {
                    "type": "string",
                    "example": "release"
                  },
                  "state": {
                    "type": "string",
                    "example": "connected"
                  },
                  "createdBy": {
                    "type": "string",
                    "example": "xtvision"
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "01/01/2000"
                  },
                  "updatedBy": {
                    "type": "string",
                    "example": "xtvision"
                  },
                  "updatedAt": {
                    "type": "string",
                    "example": "01/01/2000"
                  },
                  "authMode": {
                    "type": "string",
                    "example": "string"
                  },
                  "user": {
                    "type": "string",
                    "example": "string"
                  },
                  "password": {
                    "type": "string",
                    "example": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "kind",
                  "brand",
                  "address",
                  "url_connexion_api",
                  "url_connexion_ws",
                  "release",
                  "state",
                  "createdBy",
                  "createdAt",
                  "updatedBy",
                  "updatedAt",
                  "authMode",
                  "user",
                  "password"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/equipments/": {
      "get": {
        "summary": "get all equipments or equipments by systemId and/or status",
        "description": "",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "type": "integer",
            "description": "system ID."
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "description": "status."
          },
          {
            "name": "size",
            "in": "query",
            "type": "integer",
            "description": "size."
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "offset."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned equipments",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "gid": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "equipment"
                  },
                  "ipAddress": {
                    "type": "string",
                    "example": "ipAddress"
                  },
                  "release": {
                    "type": "string",
                    "example": "release"
                  },
                  "brand": {
                    "type": "string",
                    "example": "brand"
                  },
                  "canReceiveTextMessage": {
                    "type": "boolean",
                    "example": true
                  },
                  "camera": {
                    "type": "string",
                    "example": "camera"
                  },
                  "status": {
                    "type": "string",
                    "example": "status"
                  },
                  "equipmentBrandId": {
                    "type": "number",
                    "example": 1
                  },
                  "behaviorId": {
                    "type": "number",
                    "example": 22
                  }
                },
                "required": [
                  "id",
                  "gid",
                  "name",
                  "ipAddress",
                  "release",
                  "brand",
                  "canReceiveTextMessage",
                  "status",
                  "equipmentBrandId",
                  "behaviorId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create one or a list of equipments",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "update equipments",
        "description": "",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "parameters",
            "schema": {
              "type": "object",
              "properties": {
                "equipmentsIds": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                },
                "gid": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "equipment"
                },
                "ipAddress": {
                  "type": "string",
                  "example": "ipAddress"
                },
                "release": {
                  "type": "string",
                  "example": "release"
                },
                "brand": {
                  "type": "string",
                  "example": "brand"
                },
                "canReceiveTextMessage": {
                  "type": "boolean",
                  "example": true
                },
                "camera": {
                  "type": "string",
                  "example": "camera"
                },
                "status": {
                  "type": "string",
                  "example": "status"
                },
                "equipmentBrandId": {
                  "type": "number",
                  "example": 1
                },
                "behaviorId": {
                  "type": "number",
                  "example": 22
                }
              },
              "required": [
                "equipmentsIds"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "delete all equipments or equipment with gid",
        "description": "",
        "parameters": [
          {
            "name": "gid",
            "in": "query",
            "type": "integer",
            "description": "equipment GID."
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/equipments/{id}": {
      "get": {
        "summary": "get one equipment by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "equipment ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned equipment",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "gid": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "equipment"
                },
                "ipAddress": {
                  "type": "string",
                  "example": "ipAddress"
                },
                "release": {
                  "type": "string",
                  "example": "release"
                },
                "brand": {
                  "type": "string",
                  "example": "brand"
                },
                "canReceiveTextMessage": {
                  "type": "boolean",
                  "example": true
                },
                "camera": {
                  "type": "string",
                  "example": "camera"
                },
                "status": {
                  "type": "string",
                  "example": "status"
                },
                "equipmentBrandId": {
                  "type": "number",
                  "example": 1
                },
                "behaviorId": {
                  "type": "number",
                  "example": 22
                }
              },
              "required": [
                "id",
                "gid",
                "name",
                "ipAddress",
                "release",
                "brand",
                "canReceiveTextMessage",
                "status",
                "equipmentBrandId",
                "behaviorId"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "summary": "update an equipment",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "equipment ID."
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "parameters",
            "schema": {
              "type": "object",
              "properties": {
                "gid": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "equipment"
                },
                "ipAddress": {
                  "type": "string",
                  "example": "ipAddress"
                },
                "release": {
                  "type": "string",
                  "example": "release"
                },
                "brand": {
                  "type": "string",
                  "example": "brand"
                },
                "canReceiveTextMessage": {
                  "type": "boolean",
                  "example": true
                },
                "camera": {
                  "type": "string",
                  "example": "camera"
                },
                "status": {
                  "type": "string",
                  "example": "status"
                },
                "equipmentBrandId": {
                  "type": "number",
                  "example": 1
                },
                "behaviorId": {
                  "type": "number",
                  "example": 22
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "delete one equipment by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "equipment ID."
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/equipments/gids": {
      "post": {
        "summary": "get equipments linked by gids and system id ",
        "description": "",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "type": "integer",
            "description": "system ID."
          },
          {
            "name": "gids",
            "in": "body",
            "description": "gids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned equipments",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "gid": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "equipment"
                  },
                  "ipAddress": {
                    "type": "string",
                    "example": "ipAddress"
                  },
                  "release": {
                    "type": "string",
                    "example": "release"
                  },
                  "brand": {
                    "type": "string",
                    "example": "brand"
                  },
                  "canReceiveTextMessage": {
                    "type": "boolean",
                    "example": true
                  },
                  "camera": {
                    "type": "string",
                    "example": "camera"
                  },
                  "status": {
                    "type": "string",
                    "example": "status"
                  },
                  "equipmentBrandId": {
                    "type": "number",
                    "example": 1
                  },
                  "behaviorId": {
                    "type": "number",
                    "example": 22
                  }
                },
                "required": [
                  "id",
                  "gid",
                  "name",
                  "ipAddress",
                  "release",
                  "brand",
                  "canReceiveTextMessage",
                  "status",
                  "equipmentBrandId",
                  "behaviorId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/equipments/gid/{gid}": {
      "get": {
        "summary": "get one equipment linked by gid and system id ",
        "description": "",
        "parameters": [
          {
            "name": "gid",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "equipment GID."
          },
          {
            "name": "systemId",
            "in": "query",
            "type": "integer",
            "description": "system ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned equipment",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "gid": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "equipment"
                },
                "ipAddress": {
                  "type": "string",
                  "example": "ipAddress"
                },
                "release": {
                  "type": "string",
                  "example": "release"
                },
                "brand": {
                  "type": "string",
                  "example": "brand"
                },
                "canReceiveTextMessage": {
                  "type": "boolean",
                  "example": true
                },
                "camera": {
                  "type": "string",
                  "example": "camera"
                },
                "status": {
                  "type": "string",
                  "example": "status"
                },
                "equipmentBrandId": {
                  "type": "number",
                  "example": 1
                },
                "behaviorId": {
                  "type": "number",
                  "example": 22
                }
              },
              "required": [
                "id",
                "gid",
                "name",
                "ipAddress",
                "release",
                "brand",
                "canReceiveTextMessage",
                "status",
                "equipmentBrandId",
                "behaviorId"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/equipments/filter": {
      "post": {
        "summary": "get list of equipments from filters",
        "description": "",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "type": "integer",
            "description": "size."
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "offset."
          },
          {
            "name": "filters",
            "in": "body",
            "description": "filters",
            "schema": {
              "type": "object",
              "properties": {
                "typesIds": {
                  "type": "array",
                  "example": [
                    1
                  ],
                  "items": {
                    "type": "number"
                  }
                },
                "ids": {
                  "type": "array",
                  "example": [
                    2
                  ],
                  "items": {
                    "type": "number"
                  }
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "canReceiveTextMessage": {
                  "type": "boolean",
                  "example": false
                },
                "domainId": {
                  "type": "number",
                  "example": 1
                },
                "systemId": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/notifBindingKeys/": {
      "get": {
        "summary": "get all notif binding keys ",
        "description": "",
        "responses": {
          "200": {
            "description": "Returned notif binding keys",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create a notif binding key",
        "description": "",
        "parameters": [
          {
            "name": "notifBindingKey",
            "in": "body",
            "description": "new notif binding key object ",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "notifBindingKey"
                },
                "systemId": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned notif binding key",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "id",
                "name"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "delete all notif binding keys ",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "notif binding keys ids",
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/notifBindingKeys/{id}": {
      "get": {
        "summary": "get one notif binding key by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "notif binding key ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned notif binding key",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "id",
                "name"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "summary": "update the name of a notif binding key",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "notif binding key ID."
          },
          {
            "name": "name",
            "in": "body",
            "description": "notif binding key name",
            "schema": {
              "type": "string",
              "example": "notifBindingKey"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "delete one notif binding key by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "notif binding key ID."
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/notifPredefinedMessages/": {
      "get": {
        "summary": "get all notif predefined messages ",
        "description": "",
        "responses": {
          "200": {
            "description": "Returned notif predefined messages",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "title": {
                    "type": "string",
                    "example": "string"
                  },
                  "body": {
                    "type": "string",
                    "example": "string"
                  },
                  "messageTtl": {
                    "type": "number",
                    "example": 3600
                  },
                  "messageDelay": {
                    "type": "number",
                    "example": 0
                  },
                  "priority": {
                    "type": "string",
                    "example": "string"
                  },
                  "sender": {
                    "type": "string",
                    "example": "string"
                  }
                },
                "required": [
                  "id",
                  "title",
                  "body",
                  "messageTtl",
                  "messageDelay",
                  "priority",
                  "sender"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create a notif predefined message",
        "description": "",
        "parameters": [
          {
            "name": "notifPredefinedMessage",
            "in": "body",
            "description": "new notif predefined message object ",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "string"
                },
                "body": {
                  "type": "string",
                  "example": "string"
                },
                "messageTtl": {
                  "type": "number",
                  "example": 3600
                },
                "messageDelay": {
                  "type": "number",
                  "example": 0
                },
                "priority": {
                  "type": "string",
                  "example": "string"
                },
                "sender": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "title",
                "body",
                "messageTtl",
                "messageDelay",
                "priority",
                "sender"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned notif predefined message",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "title": {
                  "type": "string",
                  "example": "string"
                },
                "body": {
                  "type": "string",
                  "example": "string"
                },
                "messageTtl": {
                  "type": "number",
                  "example": 3600
                },
                "messageDelay": {
                  "type": "number",
                  "example": 0
                },
                "priority": {
                  "type": "string",
                  "example": "string"
                },
                "sender": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "id",
                "title",
                "body",
                "messageTtl",
                "messageDelay",
                "priority",
                "sender"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "delete all notif predefined messages ",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "notif predefined messages ids",
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/notifPredefinedMessages/{id}": {
      "get": {
        "summary": "get one notif predefined message by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "notif predefined message ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned notif predefined message",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "title": {
                  "type": "string",
                  "example": "string"
                },
                "body": {
                  "type": "string",
                  "example": "string"
                },
                "messageTtl": {
                  "type": "number",
                  "example": 3600
                },
                "messageDelay": {
                  "type": "number",
                  "example": 0
                },
                "priority": {
                  "type": "string",
                  "example": "string"
                },
                "sender": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "id",
                "title",
                "body",
                "messageTtl",
                "messageDelay",
                "priority",
                "sender"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "summary": "update a notif predefined message",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "notif predefined message ID."
          },
          {
            "name": "notifPredefinedMessage",
            "in": "body",
            "description": "change group name",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "string"
                },
                "body": {
                  "type": "string",
                  "example": "string"
                },
                "messageTtl": {
                  "type": "number",
                  "example": 3600
                },
                "messageDelay": {
                  "type": "number",
                  "example": 0
                },
                "priority": {
                  "type": "string",
                  "example": "string"
                },
                "sender": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "delete one notif predefined message by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "notif predefined message ID."
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/notifHistorizedMessages/": {
      "get": {
        "summary": "get all notif historized messages ",
        "description": "",
        "responses": {
          "200": {
            "description": "Returned notif historized messages",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "title": {
                    "type": "string",
                    "example": "string"
                  },
                  "body": {
                    "type": "string",
                    "example": "string"
                  },
                  "messageTtl": {
                    "type": "number",
                    "example": 3600
                  },
                  "messageDelay": {
                    "type": "number",
                    "example": 3600
                  },
                  "priority": {
                    "type": "string",
                    "example": "string"
                  },
                  "sender": {
                    "type": "string",
                    "example": "string"
                  },
                  "notifBindingKeysIds": {
                    "type": "string",
                    "example": "string"
                  },
                  "notifBindingKeysNames": {
                    "type": "string",
                    "example": "string"
                  },
                  "messageUuid": {
                    "type": "string",
                    "example": "string"
                  },
                  "status": {
                    "type": "string",
                    "example": "string"
                  },
                  "systemId": {
                    "type": "number",
                    "example": 1
                  }
                },
                "required": [
                  "id",
                  "title",
                  "body",
                  "messageTtl",
                  "messageDelay",
                  "priority",
                  "sender",
                  "notifBindingKeysIds",
                  "notifBindingKeysNames",
                  "messageUuid",
                  "status",
                  "systemId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create a notif historized message",
        "description": "",
        "parameters": [
          {
            "name": "notifHistorizedMessage",
            "in": "body",
            "description": "new notif historized message object ",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "string"
                },
                "body": {
                  "type": "string",
                  "example": "string"
                },
                "messageTtl": {
                  "type": "number",
                  "example": 3600
                },
                "messageDelay": {
                  "type": "number",
                  "example": 3600
                },
                "priority": {
                  "type": "string",
                  "example": "string"
                },
                "sender": {
                  "type": "string",
                  "example": "string"
                },
                "enclosed_file": {
                  "type": "string",
                  "example": "string"
                },
                "notifBindingKeysIds": {
                  "type": "array",
                  "example": [
                    1,
                    2
                  ],
                  "items": {
                    "type": "number"
                  }
                },
                "status": {
                  "type": "string",
                  "example": "string"
                },
                "systemId": {
                  "type": "number",
                  "example": 4
                }
              },
              "required": [
                "title",
                "body",
                "messageTtl",
                "messageDelay",
                "priority",
                "sender",
                "notifBindingKeysIds",
                "status",
                "systemId"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned notif historized message",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "title": {
                  "type": "string",
                  "example": "string"
                },
                "body": {
                  "type": "string",
                  "example": "string"
                },
                "messageTtl": {
                  "type": "number",
                  "example": 3600
                },
                "messageDelay": {
                  "type": "number",
                  "example": 3600
                },
                "priority": {
                  "type": "string",
                  "example": "string"
                },
                "sender": {
                  "type": "string",
                  "example": "string"
                },
                "notifBindingKeysIds": {
                  "type": "string",
                  "example": "string"
                },
                "notifBindingKeysNames": {
                  "type": "string",
                  "example": "string"
                },
                "messageUuid": {
                  "type": "string",
                  "example": "string"
                },
                "status": {
                  "type": "string",
                  "example": "string"
                },
                "systemId": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "id",
                "title",
                "body",
                "messageTtl",
                "messageDelay",
                "priority",
                "sender",
                "notifBindingKeysIds",
                "notifBindingKeysNames",
                "messageUuid",
                "status",
                "systemId"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "delete all notif historized messages ",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "notif historized messages ids",
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/notifHistorizedMessages/{id}": {
      "get": {
        "summary": "get one notif historized message by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "notif historized message ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned notif historized message",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "title": {
                  "type": "string",
                  "example": "string"
                },
                "body": {
                  "type": "string",
                  "example": "string"
                },
                "messageTtl": {
                  "type": "number",
                  "example": 3600
                },
                "messageDelay": {
                  "type": "number",
                  "example": 3600
                },
                "priority": {
                  "type": "string",
                  "example": "string"
                },
                "sender": {
                  "type": "string",
                  "example": "string"
                },
                "notifBindingKeysIds": {
                  "type": "string",
                  "example": "string"
                },
                "notifBindingKeysNames": {
                  "type": "string",
                  "example": "string"
                },
                "messageUuid": {
                  "type": "string",
                  "example": "string"
                },
                "status": {
                  "type": "string",
                  "example": "string"
                },
                "systemId": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "id",
                "title",
                "body",
                "messageTtl",
                "messageDelay",
                "priority",
                "sender",
                "notifBindingKeysIds",
                "notifBindingKeysNames",
                "messageUuid",
                "status",
                "systemId"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "summary": "update one notif historized message by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "notif historized message ID."
          },
          {
            "name": "notifHistorizedMessage",
            "in": "body",
            "description": "updated notif historized message object ",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "status"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "delete one notif historized message by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "notif historized message ID."
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/equipmentsNotifBindingKeys/": {
      "get": {
        "summary": "get all equipments and notif binding keys linked",
        "description": "",
        "parameters": [
          {
            "name": "equipmentId",
            "in": "query",
            "type": "integer",
            "description": "equipment ID."
          },
          {
            "name": "notifBindingKeyId",
            "in": "query",
            "type": "integer",
            "description": "notif binding key ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned notif binding keys ids and equipments ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "NotifBindingKeyId": {
                    "type": "number",
                    "example": 1
                  },
                  "EquipmentId": {
                    "type": "number",
                    "example": 2
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create a list of notif binding keys ids and equipments ids linked",
        "description": "",
        "parameters": [
          {
            "name": "equipmentsNotifBindingKeys",
            "in": "body",
            "description": "notif binding keys ids and equipments ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "NotifBindingKeyId": {
                    "type": "number",
                    "example": 1
                  },
                  "EquipmentId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "NotifBindingKeyId",
                  "EquipmentId"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned notif binding keys ids and equipments ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "NotifBindingKeyId": {
                    "type": "number",
                    "example": 1
                  },
                  "EquipmentId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "NotifBindingKeyId",
                  "EquipmentId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/equipmentsNotifBindingKeys/notifBindingKeysIds": {
      "post": {
        "summary": "get all notif binding keys ids from equipments ids",
        "description": "",
        "parameters": [
          {
            "name": "equipmentIds",
            "in": "body",
            "description": "equipments ids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned notif binding keys ids and equipments ids linked",
            "schema": {
              "type": "array",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "number"
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/equipmentsNotifBindingKeys/equipmentsIds": {
      "post": {
        "summary": "get all equipments ids from notif binding keys ids",
        "description": "",
        "parameters": [
          {
            "name": "notifBindingKeysIds",
            "in": "body",
            "description": "notif binding keys ids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned notif binding keys ids and equipments ids linked",
            "schema": {
              "type": "array",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "number"
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/notifPredefinedMessageNotifBindingKeys/": {
      "get": {
        "summary": "get all notif messages and notif binding keys linked",
        "description": "",
        "parameters": [
          {
            "name": "notifPredefinedMessageId",
            "in": "query",
            "type": "integer",
            "description": "notif predefined message ID."
          },
          {
            "name": "notifBindingKeyId",
            "in": "query",
            "type": "integer",
            "description": "notif binding key ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned notif binding keys ids and notifPredefinedMessages ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "NotifBindingKeyId": {
                    "type": "number",
                    "example": 1
                  },
                  "NotifPredefinedMessageId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "NotifBindingKeyId",
                  "NotifPredefinedMessageId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create a list of notif binding keys ids and notifPredefinedMessages ids linked",
        "description": "",
        "parameters": [
          {
            "name": "notifPredefinedMessageNotifBindingKeys",
            "in": "body",
            "description": "new notif binding keys ids and notifPredefinedMessages ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "NotifBindingKeyId": {
                    "type": "number",
                    "example": 1
                  },
                  "NotifPredefinedMessageId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "NotifBindingKeyId",
                  "NotifPredefinedMessageId"
                ]
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/notifPredefinedMessageNotifBindingKeys/notifBindingKeysIds": {
      "post": {
        "summary": "get all notif binding keys ids from notifPredefinedMessages ids",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "notif predefined messages ids",
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              },
              "required": [
                "ids"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned notif binding keys ids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "number"
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/currentEquipmentStates/": {
      "get": {
        "summary": "get all currents equipment states ",
        "description": "",
        "parameters": [
          {
            "name": "equipmentId",
            "in": "query",
            "type": "integer",
            "description": "equipment ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned currents equipments states",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "equipmentPropertyId": {
                    "type": "number",
                    "example": 5
                  },
                  "currentStateId": {
                    "type": "number",
                    "example": 22
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create one or a list of currents equipments states",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "update current equipments states",
        "description": "",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "currents equipments states parameters to update",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "equipmentPropertyId": {
                    "type": "number",
                    "example": 5
                  },
                  "currentStateId": {
                    "type": "number",
                    "example": 22
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "delete all currents equipment states",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/currentEquipmentStates/{id}": {
      "get": {
        "summary": "get one current equipment state by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "EquipmentState ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned current equipment state",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "equipmentPropertyId": {
                  "type": "number",
                  "example": 5
                },
                "currentStateId": {
                  "type": "number",
                  "example": 22
                }
              },
              "required": [
                "id",
                "equipmentPropertyId",
                "currentStateId"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "summary": "update current equipment state",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "EquipmentState ID."
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "equipment state parameters to update",
            "schema": {
              "type": "object",
              "properties": {
                "equipmentPropertyId": {
                  "type": "number",
                  "example": 5
                },
                "currentStateId": {
                  "type": "number",
                  "example": 22
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "delete one current equipment state by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "EquipmentState ID."
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/behaviors/": {
      "get": {
        "summary": "get all behaviors ",
        "description": "",
        "responses": {
          "200": {
            "description": "Returned behaviors",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "icon": {
                    "type": "string",
                    "example": "icon.jpg"
                  },
                  "equipmentTypeId": {
                    "type": "number",
                    "example": 1
                  },
                  "isDefault": {
                    "type": "boolean",
                    "example": true
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create one or a list of behaviors",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "delete all behaviors or from ids",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "behaviors ids",
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/behaviors/filterOne": {
      "get": {
        "summary": "get one default behavior by equipmentTypeId ",
        "description": "",
        "parameters": [
          {
            "name": "equipmentTypeId",
            "in": "query",
            "type": "integer",
            "description": "equipment type ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned default behavior",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "icon": {
                  "type": "string",
                  "example": "icon.jpg"
                },
                "isDefault": {
                  "type": "boolean",
                  "example": true
                }
              },
              "required": [
                "id",
                "name",
                "icon",
                "isDefault"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/behaviors/{id}": {
      "get": {
        "summary": "get one behavior by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "behavior ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned behavior",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "icon": {
                  "type": "string",
                  "example": "icon.jpg"
                },
                "isDefault": {
                  "type": "boolean",
                  "example": true
                }
              },
              "required": [
                "id",
                "name",
                "icon",
                "isDefault"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "delete one behavior by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "behavior ID."
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/behaviorsProperties/": {
      "get": {
        "summary": "get all behaviors properties ",
        "description": "",
        "responses": {
          "200": {
            "description": "Returned behaviors properties",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "equipmentPropertyId": {
                    "type": "number",
                    "example": 3
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create one or a list of behaviors properties",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "delete all behaviors properties or from ids",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "behaviors properties ids",
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/behaviorsProperties/{id}": {
      "get": {
        "summary": "get one behavior property by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "behavior property ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned behavior property",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "equipmentPropertyId": {
                  "type": "number",
                  "example": 3
                },
                "name": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "id",
                "equipmentPropertyId",
                "name"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/behaviorsProperties/filter": {
      "post": {
        "summary": "get all behaviors properties from ids",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "behaviors properties ids",
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              },
              "required": [
                "ids"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned behaviors properties from ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "equipmentPropertyId": {
                    "type": "number",
                    "example": 3
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  }
                },
                "required": [
                  "id",
                  "equipmentPropertyId",
                  "name"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/behaviorsProperties/propertiesIds": {
      "delete": {
        "summary": "delete behaviors properties from states ids",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "behaviors properties ids",
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              },
              "required": [
                "ids"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/behaviorsStates/": {
      "get": {
        "summary": "get all behaviors states ",
        "description": "",
        "parameters": [
          {
            "name": "behaviorPropertyId",
            "in": "query",
            "type": "integer",
            "description": "behavior property ID."
          },
          {
            "name": "state",
            "in": "query",
            "type": "string",
            "description": "state."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned behaviors states",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "stateId": {
                    "type": "number",
                    "example": 3
                  },
                  "icon": {
                    "type": "string",
                    "example": "string"
                  },
                  "alarm": {
                    "type": "boolean",
                    "example": true
                  },
                  "default": {
                    "type": "boolean",
                    "example": false
                  },
                  "mustBeArchived": {
                    "type": "boolean",
                    "example": false
                  }
                },
                "required": [
                  "id",
                  "name",
                  "stateId",
                  "icon",
                  "alarm",
                  "default",
                  "mustBeArchived"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create one or a list of behaviors states",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "delete all behaviors states or from ids",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "behaviors states ids",
            "schema": {
              "type": "object",
              "properties": {
                "BehaviorStateIds": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              },
              "required": [
                "BehaviorStateIds"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/behaviorsStates/{id}": {
      "get": {
        "summary": "get one behavior state by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "behavior state ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned behavior state",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "stateId": {
                  "type": "number",
                  "example": 3
                },
                "icon": {
                  "type": "string",
                  "example": "string"
                },
                "alarm": {
                  "type": "boolean",
                  "example": true
                },
                "default": {
                  "type": "boolean",
                  "example": false
                },
                "mustBeArchived": {
                  "type": "boolean",
                  "example": false
                }
              },
              "required": [
                "id",
                "name",
                "stateId",
                "icon",
                "alarm",
                "default",
                "mustBeArchived"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/behaviorsStates/filter": {
      "post": {
        "summary": "get all behaviors states from ids",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "behaviors states ids",
            "schema": {
              "type": "object",
              "properties": {
                "BehaviorStateIds": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              },
              "required": [
                "BehaviorStateIds"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned behaviors states from ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "stateId": {
                    "type": "number",
                    "example": 3
                  },
                  "icon": {
                    "type": "string",
                    "example": "string"
                  },
                  "alarm": {
                    "type": "boolean",
                    "example": true
                  },
                  "default": {
                    "type": "boolean",
                    "example": false
                  },
                  "mustBeArchived": {
                    "type": "boolean",
                    "example": false
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/behaviorsStates/statesIds": {
      "delete": {
        "summary": "delete behaviors states from states ids",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "states ids",
            "schema": {
              "type": "object",
              "properties": {
                "StateIds": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              },
              "required": [
                "StateIds"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/behaviorsBehaviorsProperties/": {
      "get": {
        "summary": "get all behaviors and behaviors properties linked",
        "description": "",
        "parameters": [
          {
            "name": "behaviorId",
            "in": "query",
            "type": "integer",
            "description": "behavior ID."
          },
          {
            "name": "behaviorPropertyId",
            "in": "query",
            "type": "integer",
            "description": "behavior property ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned behaviors ids and behaviors properties ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "BehaviorId": {
                    "type": "number",
                    "example": 1
                  },
                  "BehaviorPropertyId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "BehaviorId",
                  "BehaviorPropertyId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create a list of behaviors properties ids and behaviors ids linked",
        "description": "",
        "parameters": [
          {
            "name": "behaviorsBehaviorsProperties",
            "in": "body",
            "description": "behaviors properties ids and behaviors ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "BehaviorId": {
                    "type": "number",
                    "example": 1
                  },
                  "BehaviorPropertyId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "BehaviorId",
                  "BehaviorPropertyId"
                ]
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned behaviors properties ids and behaviors ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "BehaviorId": {
                    "type": "number",
                    "example": 1
                  },
                  "BehaviorPropertyId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "BehaviorId",
                  "BehaviorPropertyId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/behaviorsBehaviorsProperties/idsBehaviorsProperties": {
      "post": {
        "summary": "get all behaviors properties ids from behaviors ids",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "behaviors ids",
            "schema": {
              "type": "object",
              "properties": {
                "BehaviorIds": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              },
              "required": [
                "BehaviorIds"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned behaviors ids and behaviors properties ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "BehaviorId": {
                    "type": "number",
                    "example": 1
                  },
                  "BehaviorPropertyId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "BehaviorId",
                  "BehaviorPropertyId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/xtvisionEquipmentConfigs/": {
      "get": {
        "summary": "get all xtvision equipment configs ",
        "description": "",
        "responses": {
          "200": {
            "description": "Returned xtvision equipment configs",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "equipmentId": {
                    "type": "string",
                    "example": "1"
                  },
                  "isSupervised": {
                    "type": "boolean",
                    "example": false
                  }
                },
                "required": [
                  "equipmentId",
                  "isSupervised"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create one or a list of xtvision equipment configs",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "update xtvision equipments configs",
        "description": "",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "xtvision equipments configs parameters",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "equipmentId": {
                    "type": "string",
                    "example": "1"
                  },
                  "isSupervised": {
                    "type": "boolean",
                    "example": false
                  }
                },
                "required": [
                  "equipmentId",
                  "isSupervised"
                ]
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "delete xtvision equipment configs from ids",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "xtvision equipment configs ids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/xtvisionEquipmentConfigs/{id}": {
      "get": {
        "summary": "get one xtvision equipment config by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "xtvision equipment config ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned xtvision equipment config",
            "schema": {
              "type": "object",
              "properties": {
                "equipmentId": {
                  "type": "string",
                  "example": "1"
                },
                "isSupervised": {
                  "type": "boolean",
                  "example": false
                }
              },
              "required": [
                "equipmentId",
                "isSupervised"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "summary": "update xtvision equipment config",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "xtvision equipment config ID."
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "xtvision equipment config parameters",
            "schema": {
              "type": "object",
              "properties": {
                "equipmentId": {
                  "type": "string",
                  "example": "1"
                },
                "isSupervised": {
                  "type": "boolean",
                  "example": false
                }
              },
              "required": [
                "equipmentId",
                "isSupervised"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/xtvisionEquipmentConfigs/filter": {
      "post": {
        "summary": "get all xtvision equipment configs from ids",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "xtvision equipment configs ids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned xtvision equipment configs from ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "equipmentId": {
                    "type": "string",
                    "example": "1"
                  },
                  "isSupervised": {
                    "type": "boolean",
                    "example": false
                  }
                },
                "required": [
                  "equipmentId",
                  "isSupervised"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/actionsTypes/": {
      "get": {
        "summary": "get all action types ",
        "description": "",
        "responses": {
          "200": {
            "description": "Returned action types",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "1"
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create one or a list of action types",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "delete action types from ids",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "ids action types",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/actionsTypes/{id}": {
      "get": {
        "summary": "get one type action by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "type action ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned action type",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1"
                },
                "name": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "id",
                "name"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/actionsTypes/equipmentsPropertiesIds": {
      "post": {
        "summary": "get all action types from ids equipments properties",
        "description": "",
        "parameters": [
          {
            "name": "equipmentPropertyIds",
            "in": "body",
            "description": "ids equipments properties",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned action types from ids equipments properties",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "equipmentPropertyId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "id",
                  "name",
                  "equipmentPropertyId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/actionsTypes/filter": {
      "post": {
        "summary": "get all action types from ids",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "ids action types",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned action types from ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "1"
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/brandsActionsTypes/": {
      "get": {
        "summary": "get all brands ids and action types ids linked",
        "description": "",
        "parameters": [
          {
            "name": "brandId",
            "in": "query",
            "type": "integer",
            "description": "brand ID."
          },
          {
            "name": "actionTypeId",
            "in": "query",
            "type": "integer",
            "description": "action type ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned brands ids and action types ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "EquipmentBrandId": {
                    "type": "number",
                    "example": 1
                  },
                  "ActionTypeId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "EquipmentBrandId",
                  "ActionTypeId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create one or a list of brands ids and action types ids linked",
        "description": "",
        "parameters": [
          {
            "name": "brandsActionTypes",
            "in": "body",
            "description": "brands ids and action types ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "EquipmentBrandId": {
                    "type": "number",
                    "example": 1
                  },
                  "ActionTypeId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "EquipmentBrandId",
                  "ActionTypeId"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned brands ids and action types ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "EquipmentBrandId": {
                    "type": "number",
                    "example": 1
                  },
                  "ActionTypeId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "EquipmentBrandId",
                  "ActionTypeId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/brandsActionsTypes/actionsTypesIds": {
      "post": {
        "summary": "get all action types ids from brands ids",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "brands ids",
            "schema": {
              "type": "object",
              "properties": {
                "EquipmentBrandIds": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              },
              "required": [
                "EquipmentBrandIds"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned brands ids and action types ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "EquipmentBrandId": {
                    "type": "number",
                    "example": 1
                  },
                  "ActionTypeId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "EquipmentBrandId",
                  "ActionTypeId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/equipmentsProperties/": {
      "get": {
        "summary": "get all equipment properties or equipments properties from equipmentTypeId ",
        "description": "",
        "parameters": [
          {
            "name": "equipmentTypeId",
            "in": "query",
            "type": "integer",
            "description": "equipment type ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned equipment properties",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create one or a list of equipment properties",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "delete all equipment properties ",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "equipment properties ids",
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              },
              "required": [
                "ids"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/equipmentsProperties/{id}": {
      "get": {
        "summary": "get one equipment property by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "equipment property ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned equipment property",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "id",
                "name"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "delete one equipment property by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "equipment property ID."
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/equipmentsTypes/": {
      "get": {
        "summary": "get all equipment types or equipment types from systemId",
        "description": "",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "type": "integer",
            "description": "system ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned equipment types",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "systemId": {
                    "type": "number",
                    "example": 1
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create one or a list of equipment types",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/equipmentsTypes/ids": {
      "get": {
        "summary": "get all ids equipment types from system id",
        "description": "",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "type": "integer",
            "description": "system ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned equipment types ids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "number"
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/equipmentsTypes/filterOne": {
      "get": {
        "summary": "get equipmentType from systemId and name",
        "description": "",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "type": "integer",
            "description": "system ID."
          },
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "description": "name."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned type equipment",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "systemId": {
                  "type": "number",
                  "example": 1
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/equipmentsTypes/{id}": {
      "get": {
        "summary": "get one type equipment by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "type equipment ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned type equipment",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "systemId": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "id",
                "name",
                "systemId"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/equipmentsTypes/filter": {
      "post": {
        "summary": "get equipment types from equipment types ids",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "equipment types ids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned equipment types",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "systemId": {
                    "type": "number",
                    "example": 1
                  }
                },
                "required": [
                  "id",
                  "name",
                  "systemId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/equipmentsBrands/": {
      "get": {
        "summary": "get all equipments brands or get equipments brands from systemId",
        "description": "",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "type": "integer",
            "description": "system ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned equipments brands",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "equipmentTypeId": {
                    "type": "number",
                    "example": 1
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create one or a list of equipments brands",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "delete all equipments brands ",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/equipmentsBrands/ids": {
      "get": {
        "summary": "get all ids equipments brands from system id",
        "description": "",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "type": "integer",
            "description": "system ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned equipments brands ids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "number"
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/equipmentsBrands/filterOne": {
      "get": {
        "summary": "get equipmentBrand from systemId and name",
        "description": "",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "type": "integer",
            "description": "system ID."
          },
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "description": "equipment brand name."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned equipment brand",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "equipmentTypeId": {
                  "type": "number",
                  "example": 1
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/equipmentsBrands/{equipmentBrandId}": {
      "get": {
        "summary": "get one equipment brand by its id",
        "description": "",
        "parameters": [
          {
            "name": "equipmentBrandId",
            "in": "path",
            "required": true,
            "type": "string",
            "brand": "integer",
            "description": "equipment brand ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned equipment brand",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "equipmentTypeId": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "id",
                "name",
                "equipmentTypeId"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/equipmentsBrands/filter": {
      "post": {
        "summary": "get equipments brands from filters",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "equipments brands ids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned equipments brands",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "equipmentTypeId": {
                    "type": "number",
                    "example": 1
                  }
                },
                "required": [
                  "id",
                  "name",
                  "equipmentTypeId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/equipmentsBrands/{id}": {
      "delete": {
        "summary": "delete one equipment brand by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "equipment brand ID."
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/domains/": {
      "get": {
        "summary": "get all domains or domains from systemId",
        "description": "",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "type": "integer",
            "description": "system ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned domains",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "domainSystemId": {
                    "type": "number",
                    "example": 4
                  },
                  "parentDomainSystemId": {
                    "type": "number",
                    "example": 2
                  },
                  "systemId": {
                    "type": "number",
                    "example": 1
                  }
                },
                "required": [
                  "id",
                  "name",
                  "domainSystemId",
                  "parentDomainSystemId",
                  "systemId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create one or a list of domains",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "delete all domains",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/domains/filterOne": {
      "get": {
        "summary": "get one domain by domainSystemId and systemId",
        "description": "",
        "parameters": [
          {
            "name": "domainSystemId",
            "in": "query",
            "type": "integer",
            "description": "domain system ID."
          },
          {
            "name": "systemId",
            "in": "query",
            "type": "integer",
            "description": "system ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned domain",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "domainSystemId": {
                  "type": "number",
                  "example": 4
                },
                "parentDomainSystemId": {
                  "type": "number",
                  "example": 2
                },
                "systemId": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "id",
                "name",
                "domainSystemId",
                "parentDomainSystemId",
                "systemId"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/domains/{id}": {
      "get": {
        "summary": "get one domain by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "domain ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned domain",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "domainSystemId": {
                  "type": "number",
                  "example": 4
                },
                "parentDomainSystemId": {
                  "type": "number",
                  "example": 2
                },
                "systemId": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "id",
                "name",
                "domainSystemId",
                "parentDomainSystemId",
                "systemId"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "delete one domain by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "domain ID."
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/states/": {
      "get": {
        "summary": "get all states or state from name",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "description": "state name."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned states",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "1"
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create one or a list of states",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "delete states from ids",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "states ids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/states/{id}": {
      "get": {
        "summary": "get one state by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "state ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned state",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1"
                },
                "name": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "id",
                "name"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/states/equipmentsPropertiesIds": {
      "post": {
        "summary": "get all states from equipments propertiesids ",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "equipments properties ids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned states from equipments properties ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "equipmentPropertyId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "id",
                  "name",
                  "equipmentPropertyId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/states/filter": {
      "post": {
        "summary": "get all states from ids",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "states ids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned states from ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "1"
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/brandsStates/": {
      "get": {
        "summary": "get all brands ids and states ids linked",
        "description": "",
        "parameters": [
          {
            "name": "brandId",
            "in": "query",
            "type": "integer",
            "description": "brand ID."
          },
          {
            "name": "stateId",
            "in": "query",
            "type": "integer",
            "description": "state ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned brands ids and states ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "EquipmentBrandId": {
                    "type": "number",
                    "example": 1
                  },
                  "StateId": {
                    "type": "number",
                    "example": 2
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create one or a list of brands ids and states ids linked",
        "description": "",
        "parameters": [
          {
            "name": "brandsStates",
            "in": "body",
            "description": "brands ids and states ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "EquipmentBrandId": {
                    "type": "number",
                    "example": 1
                  },
                  "StateId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "EquipmentBrandId",
                  "StateId"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned brands ids and states ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "EquipmentBrandId": {
                    "type": "number",
                    "example": 1
                  },
                  "StateId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "EquipmentBrandId",
                  "StateId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/brandsStates/statesIds": {
      "post": {
        "summary": "get all states ids from ids brands",
        "description": "",
        "parameters": [
          {
            "name": "brandsIds",
            "in": "body",
            "description": "brands ids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned brands ids and states ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "EquipmentBrandId": {
                    "type": "number",
                    "example": 1
                  },
                  "StateId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "EquipmentBrandId",
                  "StateId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/events/": {
      "get": {
        "summary": "get all events ",
        "description": "",
        "responses": {
          "200": {
            "description": "Returned events",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "sequenceNumber": {
                    "type": "number",
                    "example": 5
                  },
                  "timestamp": {
                    "type": "string",
                    "example": "timestamp"
                  },
                  "equipmentProperty": {
                    "type": "string",
                    "example": "equipmentProperty"
                  },
                  "equipmentName": {
                    "type": "string",
                    "example": "string"
                  },
                  "stateName": {
                    "type": "string",
                    "example": "string"
                  },
                  "systemId": {
                    "type": "number",
                    "example": 2
                  },
                  "params": {
                    "type": "string",
                    "example": "params"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create one or a list of events",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "delete all events ",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/events/{id}": {
      "get": {
        "summary": "get one event by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "event ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned event",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "sequenceNumber": {
                  "type": "number",
                  "example": 5
                },
                "timestamp": {
                  "type": "string",
                  "example": "timestamp"
                },
                "equipmentProperty": {
                  "type": "string",
                  "example": "equipmentProperty"
                },
                "equipmentName": {
                  "type": "string",
                  "example": "string"
                },
                "stateName": {
                  "type": "string",
                  "example": "string"
                },
                "systemId": {
                  "type": "number",
                  "example": 2
                },
                "params": {
                  "type": "string",
                  "example": "params"
                }
              },
              "required": [
                "id",
                "sequenceNumber",
                "timestamp",
                "equipmentProperty",
                "equipmentName",
                "stateName",
                "systemId",
                "params"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "delete one event by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "event ID."
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/events/filter": {
      "post": {
        "summary": "get events by filter",
        "description": "",
        "parameters": [
          {
            "name": "filters",
            "in": "body",
            "description": "filter events by timestamp, type, equipment and/or equipmentProperty",
            "schema": {
              "type": "object",
              "properties": {
                "timestamp": {
                  "type": "string",
                  "example": "date"
                },
                "stateName": {
                  "type": "string",
                  "example": "string"
                },
                "equipmentName": {
                  "type": "string",
                  "example": "string"
                },
                "equipmentProperty": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned events with filters",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "sequenceNumber": {
                    "type": "number",
                    "example": 5
                  },
                  "timestamp": {
                    "type": "string",
                    "example": "timestamp"
                  },
                  "equipmentProperty": {
                    "type": "string",
                    "example": "equipmentProperty"
                  },
                  "equipmentName": {
                    "type": "string",
                    "example": "string"
                  },
                  "stateName": {
                    "type": "string",
                    "example": "string"
                  },
                  "systemId": {
                    "type": "number",
                    "example": 2
                  },
                  "params": {
                    "type": "string",
                    "example": "params"
                  }
                },
                "required": [
                  "id",
                  "sequenceNumber",
                  "timestamp",
                  "equipmentProperty",
                  "equipmentName",
                  "stateName",
                  "systemId",
                  "params"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/params/": {
      "get": {
        "summary": "get all params ",
        "description": "",
        "responses": {
          "200": {
            "description": "Returned params",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "1"
                  },
                  "nameId": {
                    "type": "string",
                    "example": "string"
                  },
                  "labelFr": {
                    "type": "string",
                    "example": "string"
                  },
                  "labelEn": {
                    "type": "string",
                    "example": "string"
                  },
                  "kind": {
                    "type": "string",
                    "example": "string"
                  },
                  "values": {
                    "type": "string",
                    "example": "string"
                  }
                },
                "required": [
                  "id",
                  "nameId",
                  "labelFr",
                  "labelEn",
                  "kind",
                  "values"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create one or a list of params",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "delete params from ids",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "params ids",
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/params/{id}": {
      "get": {
        "summary": "get one param by id ",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "param ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned param",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1"
                },
                "nameId": {
                  "type": "string",
                  "example": "string"
                },
                "labelFr": {
                  "type": "string",
                  "example": "string"
                },
                "labelEn": {
                  "type": "string",
                  "example": "string"
                },
                "kind": {
                  "type": "string",
                  "example": "string"
                },
                "values": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "id",
                "nameId",
                "labelFr",
                "labelEn",
                "kind",
                "values"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/equipmentsTypesEquipmentsProperties/": {
      "get": {
        "summary": "get all equipment types and equipments properties linked",
        "description": "",
        "parameters": [
          {
            "name": "equipmentTypeId",
            "in": "query",
            "type": "integer",
            "description": "equipment type ID."
          },
          {
            "name": "equipmentPropertyId",
            "in": "query",
            "type": "integer",
            "description": "equipment property ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned equipments properties ids and equipment types ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "EquipmentPropertyId": {
                    "type": "number",
                    "example": 1
                  },
                  "EquipmentTypeId": {
                    "type": "number",
                    "example": 2
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create a list of equipments properties ids and equipment types ids linked",
        "description": "",
        "parameters": [
          {
            "name": "equipmentsTypes",
            "in": "body",
            "description": "equipments properties ids and equipment types ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "EquipmentPropertyId": {
                    "type": "number",
                    "example": 1
                  },
                  "EquipmentTypeId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "EquipmentPropertyId",
                  "EquipmentTypeId"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned equipments properties ids and equipment types ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "EquipmentPropertyId": {
                    "type": "number",
                    "example": 1
                  },
                  "EquipmentTypeId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "EquipmentPropertyId",
                  "EquipmentTypeId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/equipmentsTypesEquipmentsProperties/equipmentsPropertiesIds": {
      "post": {
        "summary": "get all ids equipments properties from ids equipment types",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "equipment types ids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned equipments properties ids and equipment types ids linked",
            "schema": {
              "type": "array",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "number"
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/actionsTypesParams/": {
      "get": {
        "summary": "get all action types and params linked",
        "description": "",
        "parameters": [
          {
            "name": "actionTypeId",
            "in": "query",
            "type": "integer",
            "description": "action type ID."
          },
          {
            "name": "paramId",
            "in": "query",
            "type": "integer",
            "description": "param ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned action types ids and params ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ActionTypeId": {
                    "type": "number",
                    "example": 1
                  },
                  "ParamId": {
                    "type": "number",
                    "example": 2
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create a list of action types ids and params ids linked",
        "description": "",
        "parameters": [
          {
            "name": "actionTypeParam",
            "in": "body",
            "description": "action types ids and params ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ActionTypeId": {
                    "type": "string",
                    "example": "integer"
                  },
                  "ParamId": {
                    "type": "string",
                    "example": "integer"
                  }
                },
                "required": [
                  "ActionTypeId",
                  "ParamId"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned action types ids and params ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ActionTypeId": {
                    "type": "number",
                    "example": 1
                  },
                  "ParamId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "ActionTypeId",
                  "ParamId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/actionsTypesParams/idsParams": {
      "post": {
        "summary": "get all params ids from ids action types",
        "description": "",
        "parameters": [
          {
            "name": "actionTypeIds",
            "in": "body",
            "description": "action types ids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned action types ids and params ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ActionTypeId": {
                    "type": "number",
                    "example": 1
                  },
                  "ParamId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "ActionTypeId",
                  "ParamId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/statesParams/": {
      "get": {
        "summary": "get all states and params linked",
        "description": "",
        "parameters": [
          {
            "name": "stateId",
            "in": "query",
            "type": "integer",
            "description": "state ID."
          },
          {
            "name": "paramId",
            "in": "query",
            "type": "integer",
            "description": "param ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned states ids and params ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "StateId": {
                    "type": "number",
                    "example": 1
                  },
                  "ParamId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "StateId",
                  "ParamId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "summary": "create a list of states ids and params ids linked",
        "description": "",
        "parameters": [
          {
            "name": "NewStateParam",
            "in": "body",
            "description": "state id and param id",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "StateId": {
                    "type": "number",
                    "example": 1
                  },
                  "ParamId": {
                    "type": "number",
                    "example": 1
                  }
                },
                "required": [
                  "StateId",
                  "ParamId"
                ]
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned states ids and params ids linked",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "StateId": {
                    "type": "number",
                    "example": 1
                  },
                  "ParamId": {
                    "type": "number",
                    "example": 2
                  }
                },
                "required": [
                  "StateId",
                  "ParamId"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/statesParams/idsParams": {
      "post": {
        "summary": "get all params ids from states ids",
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "states ids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned states ids from params ids",
            "schema": {
              "type": "array",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "number"
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/database/setup/restore/{backupLocationType}": {
      "post": {
        "tags": [
          "SETUP"
        ],
        "summary": "Restore a database",
        "description": "",
        "parameters": [
          {
            "name": "backupLocationType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "location type to restore database",
            "schema": {
              "type": "object",
              "properties": {
                "backupLocationType": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "backupLocationType"
              ]
            }
          },
          {
            "name": "restoreDatabaseObject",
            "in": "body",
            "description": "name and location to restore database",
            "schema": {
              "type": "object",
              "properties": {
                "backupName": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "backupName"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/setup/backup/{backupLocationType}": {
      "post": {
        "tags": [
          "SETUP"
        ],
        "summary": "Backup a database",
        "description": "",
        "parameters": [
          {
            "name": "backupLocationType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "location type to backup database",
            "schema": {
              "type": "object",
              "properties": {
                "backupLocationType": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "backupLocationType"
              ]
            }
          },
          {
            "name": "backupDatabaseObject",
            "in": "body",
            "description": "name and location to backup database",
            "schema": {
              "type": "object",
              "properties": {
                "dbName": {
                  "type": "string",
                  "example": "string"
                },
                "backupName": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "dbName",
                "backupName"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/applicationParameters/": {
      "get": {
        "summary": "get all application parameters",
        "description": "",
        "responses": {
          "200": {
            "description": "Returned application parameters",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "counter": {
                  "type": "number",
                  "example": 1
                },
                "value": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "id",
                "counter",
                "value"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "summary": "update application parameters",
        "description": "",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "application parameters",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "integer"
                },
                "counter": {
                  "type": "string",
                  "example": "integer"
                },
                "value": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/authenticationParameters/": {
      "get": {
        "summary": "get all authentication parameters",
        "description": "",
        "responses": {
          "200": {
            "description": "Returned authentication parameters",
            "schema": {
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "example": "string"
                },
                "authorize_url": {
                  "type": "string",
                  "example": "string"
                },
                "token_url": {
                  "type": "string",
                  "example": "string"
                },
                "authenticate_url": {
                  "type": "string",
                  "example": "string"
                },
                "logout_url": {
                  "type": "string",
                  "example": "string"
                },
                "users_url": {
                  "type": "string",
                  "example": "string"
                },
                "client_id": {
                  "type": "string",
                  "example": "string"
                },
                "redirect_uri": {
                  "type": "string",
                  "example": "string"
                },
                "client_secret": {
                  "type": "string",
                  "example": "string"
                },
                "admin_client_id": {
                  "type": "string",
                  "example": "string"
                },
                "admin_client_secret": {
                  "type": "string",
                  "example": "string"
                },
                "token_username_key": {
                  "type": "string",
                  "example": "string"
                },
                "token_username_split": {
                  "type": "string",
                  "example": "string"
                },
                "ad_url": {
                  "type": "string",
                  "example": "string"
                },
                "ad_base_dn": {
                  "type": "string",
                  "example": "string"
                },
                "ad_username": {
                  "type": "string",
                  "example": "string"
                },
                "ad_password": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "mode"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "summary": "update authentication parameters",
        "description": "",
        "parameters": [
          {
            "name": "parameter",
            "in": "body",
            "description": "authentication parameters",
            "schema": {
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "example": "string"
                },
                "authorize_url": {
                  "type": "string",
                  "example": "string"
                },
                "token_url": {
                  "type": "string",
                  "example": "string"
                },
                "authenticate_url": {
                  "type": "string",
                  "example": "string"
                },
                "logout_url": {
                  "type": "string",
                  "example": "string"
                },
                "users_url": {
                  "type": "string",
                  "example": "string"
                },
                "client_id": {
                  "type": "string",
                  "example": "string"
                },
                "redirect_uri": {
                  "type": "string",
                  "example": "string"
                },
                "client_secret": {
                  "type": "string",
                  "example": "string"
                },
                "admin_client_id": {
                  "type": "string",
                  "example": "string"
                },
                "admin_client_secret": {
                  "type": "string",
                  "example": "string"
                },
                "token_username_key": {
                  "type": "string",
                  "example": "string"
                },
                "token_username_split": {
                  "type": "string",
                  "example": "string"
                },
                "ad_url": {
                  "type": "string",
                  "example": "string"
                },
                "ad_base_dn": {
                  "type": "string",
                  "example": "string"
                },
                "ad_username": {
                  "type": "string",
                  "example": "string"
                },
                "ad_password": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/scheduledJobs/": {
      "post": {
        "summary": "insert a scheduled job",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Scheduled job to insert",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                },
                "task": {
                  "type": "string",
                  "example": "string"
                },
                "date": {
                  "type": "function"
                },
                "cron": {
                  "type": "string",
                  "example": "string"
                },
                "param1": {
                  "type": "number",
                  "example": 1
                },
                "active": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "name",
                "task"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Scheduled job inserted",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                },
                "task": {
                  "type": "string",
                  "example": "string"
                },
                "date": {
                  "type": "function"
                },
                "cron": {
                  "type": "string",
                  "example": "string"
                },
                "param1": {
                  "type": "number",
                  "example": 1
                },
                "active": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "id",
                "name",
                "task"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "get": {
        "summary": "get all scheduled jobs",
        "description": "",
        "responses": {
          "200": {
            "description": "Returned scheduled jobs",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "string"
                  },
                  "task": {
                    "type": "string",
                    "example": "string"
                  },
                  "date": {
                    "type": "function"
                  },
                  "cron": {
                    "type": "string",
                    "example": "string"
                  },
                  "param1": {
                    "type": "number",
                    "example": 1
                  },
                  "active": {
                    "type": "number",
                    "example": 1
                  }
                },
                "required": [
                  "id",
                  "name",
                  "task"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "delete all scheduled jobs",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/database/scheduledJobs/{id}": {
      "get": {
        "summary": "get one scheduled job by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Scheduled job id"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned scheduled job",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                },
                "task": {
                  "type": "string",
                  "example": "string"
                },
                "date": {
                  "type": "function"
                },
                "cron": {
                  "type": "string",
                  "example": "string"
                },
                "param1": {
                  "type": "number",
                  "example": 1
                },
                "active": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "id",
                "name",
                "task"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "summary": "update a scheduled job status",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Scheduled job id"
          },
          {
            "name": "message",
            "in": "body",
            "description": "update a scheduled job status",
            "schema": {
              "type": "object",
              "properties": {
                "active": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "active"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "delete a scheduled job",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Scheduled job id"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    }
  }
}